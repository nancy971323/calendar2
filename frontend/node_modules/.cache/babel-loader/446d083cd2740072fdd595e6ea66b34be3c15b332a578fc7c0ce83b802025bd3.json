{"ast":null,"code":"import _defineProperty from \"/Users/lidiannan/Documents/GitHub/calendar2/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/lidiannan/Documents/GitHub/calendar2/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/lidiannan/Documents/GitHub/calendar2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { SET_CURRENT_USER, SET_AUTH_TOKEN, SET_AUTH_ERROR, CLEAR_AUTH } from '../mutation-types';\nimport api from '../../utils/api';\n\n// 初始狀態\nvar state = {\n  token: localStorage.getItem('token') || null,\n  currentUser: null,\n  error: null\n};\n\n// 獲取器\nvar getters = {\n  isAuthenticated: function isAuthenticated(state) {\n    return !!state.token && !!state.currentUser;\n  },\n  currentUser: function currentUser(state) {\n    return state.currentUser;\n  },\n  authError: function authError(state) {\n    return state.error;\n  }\n};\n\n// 動作\nvar actions = {\n  // 登入\n  login: function login(_ref, credentials) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, response, _response$data, token, employee, _error$response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            _context.prev = 1;\n            _context.next = 4;\n            return api.post('/api/auth/login', credentials);\n          case 4:\n            response = _context.sent;\n            _response$data = response.data, token = _response$data.token, employee = _response$data.employee; // 存儲token和用戶信息\n            localStorage.setItem('token', token);\n            commit(SET_AUTH_TOKEN, token);\n            commit(SET_CURRENT_USER, employee);\n            commit(SET_AUTH_ERROR, null);\n            return _context.abrupt(\"return\", employee);\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](1);\n            commit(SET_AUTH_ERROR, ((_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || '登入失敗');\n            throw _context.t0;\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 13]]);\n    }))();\n  },\n  // 登出\n  logout: function logout(_ref2) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var commit;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref2.commit;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return api.post('/api/auth/logout');\n          case 4:\n            _context2.next = 9;\n            break;\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error('登出API請求失敗:', _context2.t0);\n          case 9:\n            _context2.prev = 9;\n            // 無論API成功與否，都清除本地身份驗證狀態\n            localStorage.removeItem('token');\n            commit(CLEAR_AUTH);\n            return _context2.finish(9);\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 6, 9, 13]]);\n    }))();\n  },\n  // 檢查身份驗證狀態\n  checkAuth: function checkAuth(_ref3) {\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var commit, state, response;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref3.commit, state = _ref3.state;\n            if (state.token) {\n              _context3.next = 4;\n              break;\n            }\n            commit(CLEAR_AUTH);\n            return _context3.abrupt(\"return\");\n          case 4:\n            _context3.prev = 4;\n            _context3.next = 7;\n            return api.get('/api/auth/me');\n          case 7:\n            response = _context3.sent;\n            commit(SET_CURRENT_USER, response.data);\n            _context3.next = 17;\n            break;\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](4);\n            console.error('檢查身份驗證失敗:', _context3.t0);\n            localStorage.removeItem('token');\n            commit(CLEAR_AUTH);\n            throw _context3.t0;\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[4, 11]]);\n    }))();\n  }\n};\n\n// 變異\nvar mutations = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, SET_AUTH_TOKEN, function (state, token) {\n  state.token = token;\n}), SET_CURRENT_USER, function (state, user) {\n  state.currentUser = user;\n}), SET_AUTH_ERROR, function (state, error) {\n  state.error = error;\n}), CLEAR_AUTH, function (state) {\n  state.token = null;\n  state.currentUser = null;\n  state.error = null;\n});\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["SET_CURRENT_USER","SET_AUTH_TOKEN","SET_AUTH_ERROR","CLEAR_AUTH","api","state","token","localStorage","getItem","currentUser","error","getters","isAuthenticated","authError","actions","login","_ref","credentials","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","response","_response$data","employee","_error$response","wrap","_callee$","_context","prev","next","post","sent","data","setItem","abrupt","t0","stop","logout","_ref2","_callee2","_callee2$","_context2","console","removeItem","finish","checkAuth","_ref3","_callee3","_callee3$","_context3","get","mutations","_defineProperty","user","namespaced"],"sources":["/Users/lidiannan/Documents/GitHub/calendar2/frontend/src/store/modules/auth.js"],"sourcesContent":["import { \n    SET_CURRENT_USER, \n    SET_AUTH_TOKEN, \n    SET_AUTH_ERROR, \n    CLEAR_AUTH \n  } from '../mutation-types'\n  import api from '../../utils/api'\n  \n  // 初始狀態\n  const state = {\n    token: localStorage.getItem('token') || null,\n    currentUser: null,\n    error: null\n  }\n  \n  // 獲取器\n  const getters = {\n    isAuthenticated: state => !!state.token && !!state.currentUser,\n    currentUser: state => state.currentUser,\n    authError: state => state.error\n  }\n  \n  // 動作\n  const actions = {\n    // 登入\n    async login({ commit }, credentials) {\n      try {\n        const response = await api.post('/api/auth/login', credentials)\n        const { token, employee } = response.data\n        \n        // 存儲token和用戶信息\n        localStorage.setItem('token', token)\n        commit(SET_AUTH_TOKEN, token)\n        commit(SET_CURRENT_USER, employee)\n        commit(SET_AUTH_ERROR, null)\n        \n        return employee\n      } catch (error) {\n        commit(SET_AUTH_ERROR, error.response?.data || '登入失敗')\n        throw error\n      }\n    },\n    \n    // 登出\n    async logout({ commit }) {\n      try {\n        await api.post('/api/auth/logout')\n      } catch (error) {\n        console.error('登出API請求失敗:', error)\n      } finally {\n        // 無論API成功與否，都清除本地身份驗證狀態\n        localStorage.removeItem('token')\n        commit(CLEAR_AUTH)\n      }\n    },\n    \n    // 檢查身份驗證狀態\n    async checkAuth({ commit, state }) {\n      if (!state.token) {\n        commit(CLEAR_AUTH)\n        return\n      }\n      \n      try {\n        const response = await api.get('/api/auth/me')\n        commit(SET_CURRENT_USER, response.data)\n      } catch (error) {\n        console.error('檢查身份驗證失敗:', error)\n        localStorage.removeItem('token')\n        commit(CLEAR_AUTH)\n        throw error\n      }\n    }\n  }\n  \n  // 變異\n  const mutations = {\n    [SET_AUTH_TOKEN](state, token) {\n      state.token = token\n    },\n    [SET_CURRENT_USER](state, user) {\n      state.currentUser = user\n    },\n    [SET_AUTH_ERROR](state, error) {\n      state.error = error\n    },\n    [CLEAR_AUTH](state) {\n      state.token = null\n      state.currentUser = null\n      state.error = null\n    }\n  }\n  \n  export default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}