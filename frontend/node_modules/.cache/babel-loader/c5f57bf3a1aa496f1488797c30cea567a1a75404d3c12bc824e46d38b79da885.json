{"ast":null,"code":"import { SET_EVENTS, SET_EVENT, ADD_EVENT, UPDATE_EVENT, REMOVE_EVENT, SET_CURRENT_DATE, SET_EVENT_PERMISSIONS } from '../mutation-types';\nimport api from '../../utils/api';\nimport moment from 'moment';\n\n// 初始狀態\nconst state = {\n  events: [],\n  currentEvent: null,\n  currentDate: moment().format('YYYY-MM-DD'),\n  currentMonth: moment().month() + 1,\n  currentYear: moment().year(),\n  eventPermissions: {}\n};\n\n// 獲取器\nconst getters = {\n  events: state => state.events,\n  currentEvent: state => state.currentEvent,\n  currentDate: state => state.currentDate,\n  currentMonth: state => state.currentMonth,\n  currentYear: state => state.currentYear,\n  // 獲取指定日期的事件\n  eventsByDate: state => date => {\n    const dateStr = moment(date).format('YYYY-MM-DD');\n    return state.events.filter(event => {\n      const startDate = moment(event.startTime).format('YYYY-MM-DD');\n      const endDate = moment(event.endTime).format('YYYY-MM-DD');\n\n      // 檢查事件是否在指定日期當天或跨越該日期\n      return moment(dateStr).isBetween(startDate, endDate, null, '[]');\n    });\n  },\n  // 獲取事件的特殊查看權限\n  eventViewers: state => eventId => {\n    return state.eventPermissions[eventId] || [];\n  }\n};\n\n// 動作\nconst actions = {\n  // 設置當前日期\n  setCurrentDate({\n    commit\n  }, date) {\n    commit(SET_CURRENT_DATE, date);\n  },\n  // 獲取當月事件\n  async fetchMonthEvents({\n    commit,\n    state\n  }) {\n    try {\n      const response = await api.get(`/api/calendar/events/visible/year/${state.currentYear}/month/${state.currentMonth}`);\n      commit(SET_EVENTS, response.data);\n      return response.data;\n    } catch (error) {\n      console.error('獲取當月事件失敗:', error);\n      throw error;\n    }\n  },\n  // 獲取事件詳情\n  async fetchEvent({\n    commit\n  }, id) {\n    try {\n      const response = await api.get(`/api/calendar/events/${id}`);\n      commit(SET_EVENT, response.data);\n      return response.data;\n    } catch (error) {\n      console.error('獲取事件詳情失敗:', error);\n      throw error;\n    }\n  },\n  // 創建事件\n  async createEvent({\n    commit\n  }, eventData) {\n    try {\n      const response = await api.post('/api/calendar/events', eventData);\n      commit(ADD_EVENT, response.data);\n      return response.data;\n    } catch (error) {\n      console.error('創建事件失敗:', error);\n      throw error;\n    }\n  },\n  // 更新事件\n  async updateEvent({\n    commit\n  }, {\n    id,\n    eventData\n  }) {\n    try {\n      const response = await api.put(`/api/calendar/events/${id}`, eventData);\n      commit(UPDATE_EVENT, response.data);\n      return response.data;\n    } catch (error) {\n      console.error('更新事件失敗:', error);\n      throw error;\n    }\n  },\n  // 刪除事件\n  async deleteEvent({\n    commit\n  }, id) {\n    try {\n      await api.delete(`/api/calendar/events/${id}`);\n      commit(REMOVE_EVENT, id);\n      return true;\n    } catch (error) {\n      console.error('刪除事件失敗:', error);\n      throw error;\n    }\n  },\n  // 獲取事件的特殊查看權限\n  async fetchEventPermissions({\n    commit\n  }, eventId) {\n    try {\n      const response = await api.get(`/api/calendar/events/${eventId}/permissions`);\n      commit(SET_EVENT_PERMISSIONS, {\n        eventId,\n        permissions: response.data\n      });\n      return response.data;\n    } catch (error) {\n      console.error('獲取事件權限失敗:', error);\n      throw error;\n    }\n  },\n  // 添加事件查看權限\n  async addEventPermission({\n    dispatch\n  }, {\n    eventId,\n    employeeId\n  }) {\n    try {\n      await api.post(`/api/calendar/events/${eventId}/permissions/${employeeId}`);\n      // 重新獲取權限列表\n      await dispatch('fetchEventPermissions', eventId);\n      return true;\n    } catch (error) {\n      console.error('添加事件權限失敗:', error);\n      throw error;\n    }\n  },\n  // 移除事件查看權限\n  async removeEventPermission({\n    dispatch\n  }, {\n    eventId,\n    employeeId\n  }) {\n    try {\n      await api.delete(`/api/calendar/events/${eventId}/permissions/${employeeId}`);\n      // 重新獲取權限列表\n      await dispatch('fetchEventPermissions', eventId);\n      return true;\n    } catch (error) {\n      console.error('移除事件權限失敗:', error);\n      throw error;\n    }\n  },\n  // 檢查是否可以查看事件\n  async canViewEvent({}, eventId) {\n    try {\n      const response = await api.get(`/api/calendar/events/${eventId}/can-view`);\n      return response.data;\n    } catch (error) {\n      console.error('檢查事件權限失敗:', error);\n      return false;\n    }\n  }\n};\n\n// 變異\nconst mutations = {\n  [SET_EVENTS](state, events) {\n    state.events = events;\n  },\n  [SET_EVENT](state, event) {\n    state.currentEvent = event;\n  },\n  [ADD_EVENT](state, event) {\n    state.events.push(event);\n  },\n  [UPDATE_EVENT](state, updatedEvent) {\n    const index = state.events.findIndex(e => e.id === updatedEvent.id);\n    if (index !== -1) {\n      state.events.splice(index, 1, updatedEvent);\n    }\n    if (state.currentEvent && state.currentEvent.id === updatedEvent.id) {\n      state.currentEvent = updatedEvent;\n    }\n  },\n  [REMOVE_EVENT](state, id) {\n    state.events = state.events.filter(event => event.id !== id);\n    if (state.currentEvent && state.currentEvent.id === id) {\n      state.currentEvent = null;\n    }\n  },\n  [SET_CURRENT_DATE](state, date) {\n    const momentDate = moment(date);\n    state.currentDate = momentDate.format('YYYY-MM-DD');\n    state.currentMonth = momentDate.month() + 1;\n    state.currentYear = momentDate.year();\n  },\n  [SET_EVENT_PERMISSIONS](state, {\n    eventId,\n    permissions\n  }) {\n    state.eventPermissions = {\n      ...state.eventPermissions,\n      [eventId]: permissions\n    };\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["SET_EVENTS","SET_EVENT","ADD_EVENT","UPDATE_EVENT","REMOVE_EVENT","SET_CURRENT_DATE","SET_EVENT_PERMISSIONS","api","moment","state","events","currentEvent","currentDate","format","currentMonth","month","currentYear","year","eventPermissions","getters","eventsByDate","date","dateStr","filter","event","startDate","startTime","endDate","endTime","isBetween","eventViewers","eventId","actions","setCurrentDate","commit","fetchMonthEvents","response","get","data","error","console","fetchEvent","id","createEvent","eventData","post","updateEvent","put","deleteEvent","delete","fetchEventPermissions","permissions","addEventPermission","dispatch","employeeId","removeEventPermission","canViewEvent","mutations","push","updatedEvent","index","findIndex","e","splice","momentDate","namespaced"],"sources":["/Users/lidiannan/Documents/GitHub/calendar2/frontend/src/store/modules/calendar.js"],"sourcesContent":["import { \n    SET_EVENTS, \n    SET_EVENT, \n    ADD_EVENT, \n    UPDATE_EVENT, \n    REMOVE_EVENT,\n    SET_CURRENT_DATE,\n    SET_EVENT_PERMISSIONS\n  } from '../mutation-types'\n  import api from '../../utils/api'\n  import moment from 'moment'\n  \n  // 初始狀態\n  const state = {\n    events: [],\n    currentEvent: null,\n    currentDate: moment().format('YYYY-MM-DD'),\n    currentMonth: moment().month() + 1,\n    currentYear: moment().year(),\n    eventPermissions: {}\n  }\n  \n  // 獲取器\n  const getters = {\n    events: state => state.events,\n    currentEvent: state => state.currentEvent,\n    currentDate: state => state.currentDate,\n    currentMonth: state => state.currentMonth,\n    currentYear: state => state.currentYear,\n    // 獲取指定日期的事件\n    eventsByDate: state => date => {\n      const dateStr = moment(date).format('YYYY-MM-DD')\n      return state.events.filter(event => {\n        const startDate = moment(event.startTime).format('YYYY-MM-DD')\n        const endDate = moment(event.endTime).format('YYYY-MM-DD')\n        \n        // 檢查事件是否在指定日期當天或跨越該日期\n        return moment(dateStr).isBetween(startDate, endDate, null, '[]')\n      })\n    },\n    // 獲取事件的特殊查看權限\n    eventViewers: state => eventId => {\n      return state.eventPermissions[eventId] || []\n    }\n  }\n  \n  // 動作\n  const actions = {\n    // 設置當前日期\n    setCurrentDate({ commit }, date) {\n      commit(SET_CURRENT_DATE, date)\n    },\n    \n    // 獲取當月事件\n    async fetchMonthEvents({ commit, state }) {\n      try {\n        const response = await api.get(`/api/calendar/events/visible/year/${state.currentYear}/month/${state.currentMonth}`)\n        commit(SET_EVENTS, response.data)\n        return response.data\n      } catch (error) {\n        console.error('獲取當月事件失敗:', error)\n        throw error\n      }\n    },\n    \n    // 獲取事件詳情\n    async fetchEvent({ commit }, id) {\n      try {\n        const response = await api.get(`/api/calendar/events/${id}`)\n        commit(SET_EVENT, response.data)\n        return response.data\n      } catch (error) {\n        console.error('獲取事件詳情失敗:', error)\n        throw error\n      }\n    },\n    \n    // 創建事件\n    async createEvent({ commit }, eventData) {\n      try {\n        const response = await api.post('/api/calendar/events', eventData)\n        commit(ADD_EVENT, response.data)\n        return response.data\n      } catch (error) {\n        console.error('創建事件失敗:', error)\n        throw error\n      }\n    },\n    \n    // 更新事件\n    async updateEvent({ commit }, { id, eventData }) {\n      try {\n        const response = await api.put(`/api/calendar/events/${id}`, eventData)\n        commit(UPDATE_EVENT, response.data)\n        return response.data\n      } catch (error) {\n        console.error('更新事件失敗:', error)\n        throw error\n      }\n    },\n    \n    // 刪除事件\n    async deleteEvent({ commit }, id) {\n      try {\n        await api.delete(`/api/calendar/events/${id}`)\n        commit(REMOVE_EVENT, id)\n        return true\n      } catch (error) {\n        console.error('刪除事件失敗:', error)\n        throw error\n      }\n    },\n    \n    // 獲取事件的特殊查看權限\n    async fetchEventPermissions({ commit }, eventId) {\n      try {\n        const response = await api.get(`/api/calendar/events/${eventId}/permissions`)\n        commit(SET_EVENT_PERMISSIONS, { eventId, permissions: response.data })\n        return response.data\n      } catch (error) {\n        console.error('獲取事件權限失敗:', error)\n        throw error\n      }\n    },\n    \n    // 添加事件查看權限\n    async addEventPermission({ dispatch }, { eventId, employeeId }) {\n      try {\n        await api.post(`/api/calendar/events/${eventId}/permissions/${employeeId}`)\n        // 重新獲取權限列表\n        await dispatch('fetchEventPermissions', eventId)\n        return true\n      } catch (error) {\n        console.error('添加事件權限失敗:', error)\n        throw error\n      }\n    },\n    \n    // 移除事件查看權限\n    async removeEventPermission({ dispatch }, { eventId, employeeId }) {\n      try {\n        await api.delete(`/api/calendar/events/${eventId}/permissions/${employeeId}`)\n        // 重新獲取權限列表\n        await dispatch('fetchEventPermissions', eventId)\n        return true\n      } catch (error) {\n        console.error('移除事件權限失敗:', error)\n        throw error\n      }\n    },\n    \n    // 檢查是否可以查看事件\n    async canViewEvent({ }, eventId) {\n      try {\n        const response = await api.get(`/api/calendar/events/${eventId}/can-view`)\n        return response.data\n      } catch (error) {\n        console.error('檢查事件權限失敗:', error)\n        return false\n      }\n    }\n  }\n  \n  // 變異\n  const mutations = {\n    [SET_EVENTS](state, events) {\n      state.events = events\n    },\n    [SET_EVENT](state, event) {\n      state.currentEvent = event\n    },\n    [ADD_EVENT](state, event) {\n      state.events.push(event)\n    },\n    [UPDATE_EVENT](state, updatedEvent) {\n      const index = state.events.findIndex(e => e.id === updatedEvent.id)\n      if (index !== -1) {\n        state.events.splice(index, 1, updatedEvent)\n      }\n      if (state.currentEvent && state.currentEvent.id === updatedEvent.id) {\n        state.currentEvent = updatedEvent\n      }\n    },\n    [REMOVE_EVENT](state, id) {\n      state.events = state.events.filter(event => event.id !== id)\n      if (state.currentEvent && state.currentEvent.id === id) {\n        state.currentEvent = null\n      }\n    },\n    [SET_CURRENT_DATE](state, date) {\n      const momentDate = moment(date)\n      state.currentDate = momentDate.format('YYYY-MM-DD')\n      state.currentMonth = momentDate.month() + 1\n      state.currentYear = momentDate.year()\n    },\n    [SET_EVENT_PERMISSIONS](state, { eventId, permissions }) {\n      state.eventPermissions = {\n        ...state.eventPermissions,\n        [eventId]: permissions\n      }\n    }\n  }\n  \n  export default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}