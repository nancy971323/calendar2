{"ast":null,"code":"import { ref, computed, watch, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useToast } from 'primevue/usetoast';\nimport { useConfirm } from 'primevue/useconfirm';\nimport moment from 'moment';\nexport default {\n  name: 'CalendarComponent',\n  setup() {\n    const store = useStore();\n    const toast = useToast();\n    const confirm = useConfirm();\n\n    // 日期相關\n    const today = moment();\n    const currentDate = ref(today);\n    const selectedMonth = ref(today.month() + 1);\n    const selectedYear = ref(today.year());\n\n    // 對話框狀態\n    const newEventDialog = ref(false);\n    const eventDetailsDialog = ref(false);\n    const editEventDialog = ref(false);\n\n    // 事件相關\n    const newEvent = ref({\n      title: '',\n      description: '',\n      startTime: null,\n      endTime: null,\n      location: '',\n      securityLevel: null,\n      specialViewerIds: []\n    });\n    const selectedEvent = ref(null);\n    const editingEvent = ref(null);\n    const savingEvent = ref(false);\n\n    // 計算屬性\n    const currentUser = computed(() => store.getters['auth/currentUser']);\n    const events = computed(() => store.getters['calendar/events']);\n    const securityLevels = computed(() => store.getters['employee/securityLevels']);\n    const employees = computed(() => store.getters['employee/employees']);\n\n    // 日曆上顯示的日期\n    const calendarDays = computed(() => {\n      const days = [];\n      const calendarDate = moment([selectedYear.value, selectedMonth.value - 1, 1]);\n      const monthStart = calendarDate.clone().startOf('month');\n      const monthEnd = calendarDate.clone().endOf('month');\n      const calendarStart = monthStart.clone().startOf('week');\n      const calendarEnd = monthEnd.clone().endOf('week');\n\n      // 檢查是否需要顯示六週（有些月份在日曆上可能需要六行）\n      let daysInCalendar = calendarEnd.diff(calendarStart, 'days') + 1;\n      if (daysInCalendar < 42) {\n        calendarEnd.add(7, 'days');\n      }\n\n      // 生成日曆的所有日期\n      let day = calendarStart.clone();\n      while (day.isSameOrBefore(calendarEnd)) {\n        const isOtherMonth = day.month() !== monthStart.month();\n        const dayEvents = events.value.filter(event => {\n          const start = moment(event.startTime);\n          const end = moment(event.endTime);\n          return day.isBetween(start, end, 'day', '[]');\n        });\n        days.push({\n          date: day.format('YYYY-MM-DD'),\n          dayNumber: day.date(),\n          isOtherMonth,\n          isToday: day.isSame(today, 'day'),\n          events: dayEvents\n        });\n        day = day.add(1, 'day');\n      }\n      return days;\n    });\n    const weekdays = ref(['日', '一', '二', '三', '四', '五', '六']);\n    const months = ref([{\n      name: '一月',\n      value: 1\n    }, {\n      name: '二月',\n      value: 2\n    }, {\n      name: '三月',\n      value: 3\n    }, {\n      name: '四月',\n      value: 4\n    }, {\n      name: '五月',\n      value: 5\n    }, {\n      name: '六月',\n      value: 6\n    }, {\n      name: '七月',\n      value: 7\n    }, {\n      name: '八月',\n      value: 8\n    }, {\n      name: '九月',\n      value: 9\n    }, {\n      name: '十月',\n      value: 10\n    }, {\n      name: '十一月',\n      value: 11\n    }, {\n      name: '十二月',\n      value: 12\n    }]);\n    const years = computed(() => {\n      const currentYear = today.year();\n      const yearOptions = [];\n      for (let i = currentYear - 5; i <= currentYear + 5; i++) {\n        yearOptions.push(i);\n      }\n      return yearOptions;\n    });\n    const currentMonthYear = computed(() => {\n      return `${selectedYear.value}年 ${months.value.find(m => m.value === selectedMonth.value).name}`;\n    });\n\n    // 安全等級選項\n    const securityLevelOptions = computed(() => {\n      if (!securityLevels.value) return [];\n      return Object.keys(securityLevels.value).map(level => ({\n        name: securityLevels.value[level].description,\n        value: level\n      }));\n    });\n\n    // 低權限員工列表（用於特殊權限設定）\n    const lowerLevelEmployees = computed(() => {\n      if (!currentUser.value || !currentUser.value.securityLevel || !employees.value) return [];\n\n      // 根據當前用戶權限過濾低權限員工\n      const currentLevel = currentUser.value.securityLevel;\n      return employees.value.filter(emp => {\n        const empLevel = emp.securityLevel;\n\n        // 安全等級數字越小權限越高\n        return empLevel > currentLevel && emp.id !== currentUser.value.id;\n      });\n    });\n\n    // 特殊查看權限的員工顯示列表\n    const specialViewersDisplay = computed(() => {\n      if (!selectedEvent.value || !selectedEvent.value.specialViewerIds || !employees.value) return [];\n      return employees.value.filter(emp => selectedEvent.value.specialViewerIds.includes(emp.id));\n    });\n\n    // 用戶權限相關\n    const isEventCreator = computed(() => {\n      return selectedEvent.value && currentUser.value && selectedEvent.value.creatorId === currentUser.value.id;\n    });\n    const canEditEvent = computed(() => isEventCreator.value);\n    const canDeleteEvent = computed(() => isEventCreator.value);\n    const canGrantSpecialPermissions = computed(() => !!currentUser.value);\n\n    // 監聽月份和年份變化，重新加載事件\n    watch([selectedMonth, selectedYear], async () => {\n      await store.dispatch('calendar/setCurrentDate', moment([selectedYear.value, selectedMonth.value - 1, 1]).format('YYYY-MM-DD'));\n      loadEvents();\n    });\n\n    // 加載指定月份的事件\n    const loadEvents = async () => {\n      try {\n        await store.dispatch('calendar/fetchMonthEvents');\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: '無法加載事件',\n          life: 3000\n        });\n      }\n    };\n\n    // 導航到上一個月\n    const previousMonth = () => {\n      if (selectedMonth.value === 1) {\n        selectedMonth.value = 12;\n        selectedYear.value--;\n      } else {\n        selectedMonth.value--;\n      }\n    };\n\n    // 導航到下一個月\n    const nextMonth = () => {\n      if (selectedMonth.value === 12) {\n        selectedMonth.value = 1;\n        selectedYear.value++;\n      } else {\n        selectedMonth.value++;\n      }\n    };\n\n    // 導航到今天\n    const goToToday = () => {\n      selectedMonth.value = today.month() + 1;\n      selectedYear.value = today.year();\n    };\n\n    // 選擇日期\n    const selectDay = day => {\n      // 處理日期選擇，可以彈出該日事件列表等\n      if (day.isOtherMonth) return;\n\n      // 設置新事件的時間為選擇的日期\n      const selectedDate = moment(day.date);\n\n      // 重置並打開新事件對話框\n      resetNewEvent();\n      newEvent.value.startTime = selectedDate.hour(9).minute(0).second(0).toDate();\n      newEvent.value.endTime = selectedDate.hour(10).minute(0).second(0).toDate();\n\n      // 如果有事件，可以顯示一個選擇菜單\n      if (day.events && day.events.length > 0) {\n        // 此處可以實現一個事件選擇功能\n      } else {\n        // 直接打開新事件對話框\n        newEventDialog.value = true;\n      }\n    };\n\n    // 打開新事件對話框\n    const openNewEventDialog = () => {\n      resetNewEvent();\n\n      // 設置默認時間為今天\n      const now = moment();\n      newEvent.value.startTime = now.hour(9).minute(0).second(0).toDate();\n      newEvent.value.endTime = now.hour(10).minute(0).second(0).toDate();\n      newEventDialog.value = true;\n    };\n\n    // 重置新事件表單\n    const resetNewEvent = () => {\n      newEvent.value = {\n        title: '',\n        description: '',\n        startTime: null,\n        endTime: null,\n        location: '',\n        securityLevel: currentUser.value?.securityLevel || null,\n        specialViewerIds: []\n      };\n    };\n\n    // 保存新事件\n    const saveNewEvent = async () => {\n      try {\n        // 表單驗證\n        if (!newEvent.value.title) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請輸入事件標題',\n            life: 3000\n          });\n          return;\n        }\n        if (!newEvent.value.startTime || !newEvent.value.endTime) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請選擇開始和結束時間',\n            life: 3000\n          });\n          return;\n        }\n        if (moment(newEvent.value.endTime).isBefore(moment(newEvent.value.startTime))) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '結束時間不能早於開始時間',\n            life: 3000\n          });\n          return;\n        }\n        savingEvent.value = true;\n        await store.dispatch('calendar/createEvent', newEvent.value);\n        toast.add({\n          severity: 'success',\n          summary: '成功',\n          detail: '事件已創建',\n          life: 3000\n        });\n        newEventDialog.value = false;\n        resetNewEvent();\n\n        // 重新加載事件\n        await loadEvents();\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: error.response?.data || '創建事件失敗',\n          life: 3000\n        });\n      } finally {\n        savingEvent.value = false;\n      }\n    };\n\n    // 打開事件詳情對話框\n    const openEventDetailsDialog = async event => {\n      selectedEvent.value = event;\n\n      // 獲取事件特殊權限\n      if (isEventCreator.value) {\n        try {\n          await store.dispatch('calendar/fetchEventPermissions', event.id);\n        } catch (error) {\n          console.error('無法獲取事件權限:', error);\n        }\n      }\n      eventDetailsDialog.value = true;\n    };\n\n    // 編輯事件\n    const editEvent = () => {\n      if (!selectedEvent.value) return;\n\n      // 複製事件對象進行編輯\n      editingEvent.value = JSON.parse(JSON.stringify(selectedEvent.value));\n\n      // 將字串日期轉換為Date物件\n      editingEvent.value.startTime = new Date(editingEvent.value.startTime);\n      editingEvent.value.endTime = new Date(editingEvent.value.endTime);\n\n      // 關閉詳情對話框，打開編輯對話框\n      eventDetailsDialog.value = false;\n      editEventDialog.value = true;\n    };\n\n    // 保存編輯的事件\n    const saveEditedEvent = async () => {\n      try {\n        // 表單驗證\n        if (!editingEvent.value.title) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請輸入事件標題',\n            life: 3000\n          });\n          return;\n        }\n        if (!editingEvent.value.startTime || !editingEvent.value.endTime) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請選擇開始和結束時間',\n            life: 3000\n          });\n          return;\n        }\n        if (moment(editingEvent.value.endTime).isBefore(moment(editingEvent.value.startTime))) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '結束時間不能早於開始時間',\n            life: 3000\n          });\n          return;\n        }\n        savingEvent.value = true;\n        await store.dispatch('calendar/updateEvent', {\n          id: editingEvent.value.id,\n          eventData: editingEvent.value\n        });\n        toast.add({\n          severity: 'success',\n          summary: '成功',\n          detail: '事件已更新',\n          life: 3000\n        });\n        editEventDialog.value = false;\n        editingEvent.value = null;\n\n        // 重新加載事件\n        await loadEvents();\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: error.response?.data || '更新事件失敗',\n          life: 3000\n        });\n      } finally {\n        savingEvent.value = false;\n      }\n    };\n\n    // 確認刪除事件\n    const confirmDeleteEvent = () => {\n      confirm.require({\n        message: '確定要刪除此事件嗎？',\n        header: '刪除確認',\n        icon: 'pi pi-exclamation-triangle',\n        acceptLabel: '確定',\n        rejectLabel: '取消',\n        accept: () => deleteEvent()\n      });\n    };\n\n    // 刪除事件\n    const deleteEvent = async () => {\n      if (!selectedEvent.value) return;\n      try {\n        await store.dispatch('calendar/deleteEvent', selectedEvent.value.id);\n        toast.add({\n          severity: 'success',\n          summary: '成功',\n          detail: '事件已刪除',\n          life: 3000\n        });\n        eventDetailsDialog.value = false;\n        selectedEvent.value = null;\n\n        // 重新加載事件\n        await loadEvents();\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: error.response?.data || '刪除事件失敗',\n          life: 3000\n        });\n      }\n    };\n\n    // 工具方法\n    const formatEventTime = event => {\n      const start = moment(event.startTime);\n      return start.format('HH:mm');\n    };\n    const formatEventDateTime = event => {\n      const start = moment(event.startTime);\n      const end = moment(event.endTime);\n      if (start.isSame(end, 'day')) {\n        return `${start.format('YYYY/MM/DD HH:mm')} - ${end.format('HH:mm')}`;\n      } else {\n        return `${start.format('YYYY/MM/DD HH:mm')} - ${end.format('YYYY/MM/DD HH:mm')}`;\n      }\n    };\n    const getEventClass = event => {\n      if (!event.securityLevel) return '';\n      switch (event.securityLevel) {\n        case 'LEVEL_1':\n          return 'event-level1';\n        case 'LEVEL_2':\n          return 'event-level2';\n        case 'LEVEL_3':\n          return 'event-level3';\n        case 'LEVEL_4':\n          return 'event-level4';\n        default:\n          return '';\n      }\n    };\n    const getSecurityLevelName = level => {\n      if (!securityLevels.value || !level) return level;\n      return securityLevels.value[level]?.description || level;\n    };\n\n    // 初始化\n    onMounted(async () => {\n      // 加載安全等級\n      try {\n        await store.dispatch('employee/fetchSecurityLevels');\n      } catch (error) {\n        console.error('無法加載安全等級:', error);\n      }\n\n      // 加載員工列表\n      try {\n        await store.dispatch('employee/fetchActiveEmployees');\n      } catch (error) {\n        console.error('無法加載員工列表:', error);\n      }\n\n      // 設置當前日期並加載事件\n      await store.dispatch('calendar/setCurrentDate', moment([selectedYear.value, selectedMonth.value - 1, 1]).format('YYYY-MM-DD'));\n      await loadEvents();\n    });\n    return {\n      // 日期相關\n      currentDate,\n      selectedMonth,\n      selectedYear,\n      weekdays,\n      months,\n      years,\n      currentMonthYear,\n      calendarDays,\n      // 對話框狀態\n      newEventDialog,\n      eventDetailsDialog,\n      editEventDialog,\n      // 事件相關\n      newEvent,\n      selectedEvent,\n      editingEvent,\n      savingEvent,\n      securityLevelOptions,\n      lowerLevelEmployees,\n      specialViewersDisplay,\n      // 計算屬性\n      isEventCreator,\n      canEditEvent,\n      canDeleteEvent,\n      canGrantSpecialPermissions,\n      // 方法\n      previousMonth,\n      nextMonth,\n      goToToday,\n      selectDay,\n      openNewEventDialog,\n      resetNewEvent,\n      saveNewEvent,\n      openEventDetailsDialog,\n      editEvent,\n      saveEditedEvent,\n      confirmDeleteEvent,\n      deleteEvent,\n      formatEventTime,\n      formatEventDateTime,\n      getEventClass,\n      getSecurityLevelName\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","useStore","useToast","useConfirm","moment","name","setup","store","toast","confirm","today","currentDate","selectedMonth","month","selectedYear","year","newEventDialog","eventDetailsDialog","editEventDialog","newEvent","title","description","startTime","endTime","location","securityLevel","specialViewerIds","selectedEvent","editingEvent","savingEvent","currentUser","getters","events","securityLevels","employees","calendarDays","days","calendarDate","value","monthStart","clone","startOf","monthEnd","endOf","calendarStart","calendarEnd","daysInCalendar","diff","add","day","isSameOrBefore","isOtherMonth","dayEvents","filter","event","start","end","isBetween","push","date","format","dayNumber","isToday","isSame","weekdays","months","years","currentYear","yearOptions","i","currentMonthYear","find","m","securityLevelOptions","Object","keys","map","level","lowerLevelEmployees","currentLevel","emp","empLevel","id","specialViewersDisplay","includes","isEventCreator","creatorId","canEditEvent","canDeleteEvent","canGrantSpecialPermissions","dispatch","loadEvents","error","severity","summary","detail","life","previousMonth","nextMonth","goToToday","selectDay","selectedDate","resetNewEvent","hour","minute","second","toDate","length","openNewEventDialog","now","saveNewEvent","isBefore","response","data","openEventDetailsDialog","console","editEvent","JSON","parse","stringify","Date","saveEditedEvent","eventData","confirmDeleteEvent","require","message","header","icon","acceptLabel","rejectLabel","accept","deleteEvent","formatEventTime","formatEventDateTime","getEventClass","getSecurityLevelName"],"sources":["/Users/lidiannan/Documents/GitHub/calendar2/frontend/src/components/Calendar.vue"],"sourcesContent":["<template>\n  <div class=\"calendar-container\">\n    <div class=\"calendar-header\">\n      <h1>行事曆 - {{ currentMonthYear }}</h1>\n      \n      <div class=\"calendar-controls\">\n        <Button icon=\"pi pi-chevron-left\" @click=\"previousMonth\" class=\"p-button-rounded p-button-outlined\" />\n        <Button @click=\"goToToday\" label=\"今天\" class=\"p-button-outlined\" />\n        <Button icon=\"pi pi-chevron-right\" @click=\"nextMonth\" class=\"p-button-rounded p-button-outlined\" />\n        \n        <Dropdown v-model=\"selectedMonth\" :options=\"months\" optionLabel=\"name\" optionValue=\"value\" class=\"month-dropdown\" />\n        <Dropdown v-model=\"selectedYear\" :options=\"years\" class=\"year-dropdown\" />\n      </div>\n      \n      <div class=\"calendar-actions\">\n        <Button label=\"新增事件\" icon=\"pi pi-plus\" @click=\"openNewEventDialog\" />\n      </div>\n    </div>\n    \n    <div class=\"calendar-content\">\n      <div class=\"calendar-weekdays\">\n        <div class=\"weekday\" v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\n      </div>\n      \n      <div class=\"calendar-days\">\n        <div \n          v-for=\"day in calendarDays\" \n          :key=\"day.date\" \n          class=\"calendar-day\" \n          :class=\"{ \n            'other-month': day.isOtherMonth, \n            'today': day.isToday,\n            'has-events': day.events && day.events.length > 0\n          }\"\n          @click=\"selectDay(day)\"\n        >\n          <div class=\"day-number\">{{ day.dayNumber }}</div>\n          \n          <div class=\"day-events\">\n            <div \n              v-for=\"event in day.events\" \n              :key=\"event.id\" \n              class=\"day-event\" \n              :class=\"getEventClass(event)\"\n              @click.stop=\"openEventDetailsDialog(event)\"\n            >\n              <span class=\"event-time\">{{ formatEventTime(event) }}</span>\n              <span class=\"event-title\">{{ event.title }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 新增事件對話框 -->\n    <Dialog v-model:visible=\"newEventDialog\" header=\"新增事件\" :style=\"{ width: '500px' }\" :modal=\"true\">\n      <div class=\"p-fluid\">\n        <div class=\"p-field\">\n          <label for=\"event-title\">標題</label>\n          <InputText id=\"event-title\" v-model.trim=\"newEvent.title\" placeholder=\"事件標題\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"event-description\">描述</label>\n          <Textarea id=\"event-description\" v-model=\"newEvent.description\" rows=\"3\" placeholder=\"事件描述\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"event-start\">開始時間</label>\n          <Calendar id=\"event-start\" v-model=\"newEvent.startTime\" showTime hourFormat=\"24\" placeholder=\"開始時間\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"event-end\">結束時間</label>\n          <Calendar id=\"event-end\" v-model=\"newEvent.endTime\" showTime hourFormat=\"24\" placeholder=\"結束時間\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"event-location\">地點</label>\n          <InputText id=\"event-location\" v-model.trim=\"newEvent.location\" placeholder=\"事件地點\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"event-security-level\">安全等級</label>\n          <Dropdown id=\"event-security-level\" v-model=\"newEvent.securityLevel\" :options=\"securityLevelOptions\" optionLabel=\"name\" optionValue=\"value\" placeholder=\"選擇安全等級\" />\n        </div>\n        \n        <div class=\"p-field\" v-if=\"newEvent.securityLevel && canGrantSpecialPermissions\">\n          <label for=\"event-special-viewers\">特殊查看權限</label>\n          <MultiSelect\n            id=\"event-special-viewers\"\n            v-model=\"newEvent.specialViewerIds\"\n            :options=\"lowerLevelEmployees\"\n            optionLabel=\"fullName\"\n            optionValue=\"id\"\n            placeholder=\"可選擇低權限員工\"\n            display=\"chip\"\n          />\n        </div>\n      </div>\n      \n      <template #footer>\n        <Button label=\"取消\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"newEventDialog = false\" />\n        <Button label=\"儲存\" icon=\"pi pi-check\" @click=\"saveNewEvent\" :loading=\"savingEvent\" />\n      </template>\n    </Dialog>\n    \n    <!-- 事件詳情對話框 -->\n    <Dialog v-model:visible=\"eventDetailsDialog\" :header=\"selectedEvent?.title || '事件詳情'\" :style=\"{ width: '500px' }\" :modal=\"true\">\n      <div v-if=\"selectedEvent\" class=\"event-details\">\n        <div class=\"event-detail-item\">\n          <span class=\"detail-label\">時間：</span>\n          <span class=\"detail-value\">{{ formatEventDateTime(selectedEvent) }}</span>\n        </div>\n        \n        <div class=\"event-detail-item\">\n          <span class=\"detail-label\">地點：</span>\n          <span class=\"detail-value\">{{ selectedEvent.location || '無地點' }}</span>\n        </div>\n        \n        <div class=\"event-detail-item\">\n          <span class=\"detail-label\">安全等級：</span>\n          <span class=\"detail-value\">{{ getSecurityLevelName(selectedEvent.securityLevel) }}</span>\n        </div>\n        \n        <div class=\"event-detail-item\">\n          <span class=\"detail-label\">創建者：</span>\n          <span class=\"detail-value\">{{ selectedEvent.creatorUsername }}</span>\n        </div>\n        \n        <Divider />\n        \n        <div class=\"event-description\">\n          <h3>事件描述</h3>\n          <p>{{ selectedEvent.description || '無描述' }}</p>\n        </div>\n        \n        <div v-if=\"isEventCreator && specialViewersDisplay.length > 0\" class=\"event-special-viewers\">\n          <h3>特殊權限人員</h3>\n          <ul>\n            <li v-for=\"viewer in specialViewersDisplay\" :key=\"viewer.id\">\n              {{ viewer.fullName }}\n            </li>\n          </ul>\n        </div>\n      </div>\n      \n      <template #footer>\n        <div class=\"event-actions\">\n          <Button v-if=\"canEditEvent\" label=\"編輯\" icon=\"pi pi-pencil\" class=\"p-button-secondary\" @click=\"editEvent\" />\n          <Button v-if=\"canDeleteEvent\" label=\"刪除\" icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"confirmDeleteEvent\" />\n          <Button label=\"關閉\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"eventDetailsDialog = false\" />\n        </div>\n      </template>\n    </Dialog>\n    \n    <!-- 編輯事件對話框 -->\n    <Dialog v-model:visible=\"editEventDialog\" header=\"編輯事件\" :style=\"{ width: '500px' }\" :modal=\"true\">\n      <div v-if=\"editingEvent\" class=\"p-fluid\">\n        <div class=\"p-field\">\n          <label for=\"edit-event-title\">標題</label>\n          <InputText id=\"edit-event-title\" v-model.trim=\"editingEvent.title\" placeholder=\"事件標題\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"edit-event-description\">描述</label>\n          <Textarea id=\"edit-event-description\" v-model=\"editingEvent.description\" rows=\"3\" placeholder=\"事件描述\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"edit-event-start\">開始時間</label>\n          <Calendar id=\"edit-event-start\" v-model=\"editingEvent.startTime\" showTime hourFormat=\"24\" placeholder=\"開始時間\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"edit-event-end\">結束時間</label>\n          <Calendar id=\"edit-event-end\" v-model=\"editingEvent.endTime\" showTime hourFormat=\"24\" placeholder=\"結束時間\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"edit-event-location\">地點</label>\n          <InputText id=\"edit-event-location\" v-model.trim=\"editingEvent.location\" placeholder=\"事件地點\" />\n        </div>\n        \n        <div class=\"p-field\">\n          <label for=\"edit-event-security-level\">安全等級</label>\n          <Dropdown id=\"edit-event-security-level\" v-model=\"editingEvent.securityLevel\" :options=\"securityLevelOptions\" optionLabel=\"name\" optionValue=\"value\" placeholder=\"選擇安全等級\" />\n        </div>\n        \n        <div class=\"p-field\" v-if=\"editingEvent.securityLevel && canGrantSpecialPermissions\">\n          <label for=\"edit-event-special-viewers\">特殊查看權限</label>\n          <MultiSelect\n            id=\"edit-event-special-viewers\"\n            v-model=\"editingEvent.specialViewerIds\"\n            :options=\"lowerLevelEmployees\"\n            optionLabel=\"fullName\"\n            optionValue=\"id\"\n            placeholder=\"可選擇低權限員工\"\n            display=\"chip\"\n          />\n        </div>\n      </div>\n      \n      <template #footer>\n        <Button label=\"取消\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"editEventDialog = false\" />\n        <Button label=\"儲存\" icon=\"pi pi-check\" @click=\"saveEditedEvent\" :loading=\"savingEvent\" />\n      </template>\n    </Dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useToast } from 'primevue/usetoast'\nimport { useConfirm } from 'primevue/useconfirm'\nimport moment from 'moment'\n\nexport default {\n  name: 'CalendarComponent',\n  \n  setup() {\n    const store = useStore()\n    const toast = useToast()\n    const confirm = useConfirm()\n    \n    // 日期相關\n    const today = moment()\n    const currentDate = ref(today)\n    const selectedMonth = ref(today.month() + 1)\n    const selectedYear = ref(today.year())\n    \n    // 對話框狀態\n    const newEventDialog = ref(false)\n    const eventDetailsDialog = ref(false)\n    const editEventDialog = ref(false)\n    \n    // 事件相關\n    const newEvent = ref({\n      title: '',\n      description: '',\n      startTime: null,\n      endTime: null,\n      location: '',\n      securityLevel: null,\n      specialViewerIds: []\n    })\n    \n    const selectedEvent = ref(null)\n    const editingEvent = ref(null)\n    const savingEvent = ref(false)\n    \n    // 計算屬性\n    const currentUser = computed(() => store.getters['auth/currentUser'])\n    const events = computed(() => store.getters['calendar/events'])\n    const securityLevels = computed(() => store.getters['employee/securityLevels'])\n    const employees = computed(() => store.getters['employee/employees'])\n    \n    // 日曆上顯示的日期\n    const calendarDays = computed(() => {\n      const days = []\n      const calendarDate = moment([selectedYear.value, selectedMonth.value - 1, 1])\n      const monthStart = calendarDate.clone().startOf('month')\n      const monthEnd = calendarDate.clone().endOf('month')\n      const calendarStart = monthStart.clone().startOf('week')\n      const calendarEnd = monthEnd.clone().endOf('week')\n      \n      // 檢查是否需要顯示六週（有些月份在日曆上可能需要六行）\n      let daysInCalendar = calendarEnd.diff(calendarStart, 'days') + 1\n      if (daysInCalendar < 42) {\n        calendarEnd.add(7, 'days')\n      }\n      \n      // 生成日曆的所有日期\n      let day = calendarStart.clone()\n      while (day.isSameOrBefore(calendarEnd)) {\n        const isOtherMonth = day.month() !== monthStart.month()\n        const dayEvents = events.value.filter(event => {\n          const start = moment(event.startTime)\n          const end = moment(event.endTime)\n          return day.isBetween(start, end, 'day', '[]')\n        })\n        \n        days.push({\n          date: day.format('YYYY-MM-DD'),\n          dayNumber: day.date(),\n          isOtherMonth,\n          isToday: day.isSame(today, 'day'),\n          events: dayEvents\n        })\n        \n        day = day.add(1, 'day')\n      }\n      \n      return days\n    })\n    \n    const weekdays = ref(['日', '一', '二', '三', '四', '五', '六'])\n    \n    const months = ref([\n      { name: '一月', value: 1 },\n      { name: '二月', value: 2 },\n      { name: '三月', value: 3 },\n      { name: '四月', value: 4 },\n      { name: '五月', value: 5 },\n      { name: '六月', value: 6 },\n      { name: '七月', value: 7 },\n      { name: '八月', value: 8 },\n      { name: '九月', value: 9 },\n      { name: '十月', value: 10 },\n      { name: '十一月', value: 11 },\n      { name: '十二月', value: 12 }\n    ])\n    \n    const years = computed(() => {\n      const currentYear = today.year()\n      const yearOptions = []\n      for (let i = currentYear - 5; i <= currentYear + 5; i++) {\n        yearOptions.push(i)\n      }\n      return yearOptions\n    })\n    \n    const currentMonthYear = computed(() => {\n      return `${selectedYear.value}年 ${months.value.find(m => m.value === selectedMonth.value).name}`\n    })\n    \n    // 安全等級選項\n    const securityLevelOptions = computed(() => {\n      if (!securityLevels.value) return []\n      \n      return Object.keys(securityLevels.value).map(level => ({\n        name: securityLevels.value[level].description,\n        value: level\n      }))\n    })\n    \n    // 低權限員工列表（用於特殊權限設定）\n    const lowerLevelEmployees = computed(() => {\n      if (!currentUser.value || !currentUser.value.securityLevel || !employees.value) return []\n      \n      // 根據當前用戶權限過濾低權限員工\n      const currentLevel = currentUser.value.securityLevel\n      return employees.value.filter(emp => {\n        const empLevel = emp.securityLevel\n        \n        // 安全等級數字越小權限越高\n        return empLevel > currentLevel && emp.id !== currentUser.value.id\n      })\n    })\n    \n    // 特殊查看權限的員工顯示列表\n    const specialViewersDisplay = computed(() => {\n      if (!selectedEvent.value || !selectedEvent.value.specialViewerIds || !employees.value) return []\n      \n      return employees.value.filter(emp => \n        selectedEvent.value.specialViewerIds.includes(emp.id)\n      )\n    })\n    \n    // 用戶權限相關\n    const isEventCreator = computed(() => {\n      return selectedEvent.value && currentUser.value && \n             selectedEvent.value.creatorId === currentUser.value.id\n    })\n    \n    const canEditEvent = computed(() => isEventCreator.value)\n    \n    const canDeleteEvent = computed(() => isEventCreator.value)\n    \n    const canGrantSpecialPermissions = computed(() => !!currentUser.value)\n    \n    // 監聽月份和年份變化，重新加載事件\n    watch([selectedMonth, selectedYear], async () => {\n      await store.dispatch('calendar/setCurrentDate', \n        moment([selectedYear.value, selectedMonth.value - 1, 1]).format('YYYY-MM-DD')\n      )\n      loadEvents()\n    })\n    \n    // 加載指定月份的事件\n    const loadEvents = async () => {\n      try {\n        await store.dispatch('calendar/fetchMonthEvents')\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: '無法加載事件',\n          life: 3000\n        })\n      }\n    }\n    \n    // 導航到上一個月\n    const previousMonth = () => {\n      if (selectedMonth.value === 1) {\n        selectedMonth.value = 12\n        selectedYear.value--\n      } else {\n        selectedMonth.value--\n      }\n    }\n    \n    // 導航到下一個月\n    const nextMonth = () => {\n      if (selectedMonth.value === 12) {\n        selectedMonth.value = 1\n        selectedYear.value++\n      } else {\n        selectedMonth.value++\n      }\n    }\n    \n    // 導航到今天\n    const goToToday = () => {\n      selectedMonth.value = today.month() + 1\n      selectedYear.value = today.year()\n    }\n    \n    // 選擇日期\n    const selectDay = (day) => {\n      // 處理日期選擇，可以彈出該日事件列表等\n      if (day.isOtherMonth) return\n      \n      // 設置新事件的時間為選擇的日期\n      const selectedDate = moment(day.date)\n      \n      // 重置並打開新事件對話框\n      resetNewEvent()\n      newEvent.value.startTime = selectedDate.hour(9).minute(0).second(0).toDate()\n      newEvent.value.endTime = selectedDate.hour(10).minute(0).second(0).toDate()\n      \n      // 如果有事件，可以顯示一個選擇菜單\n      if (day.events && day.events.length > 0) {\n        // 此處可以實現一個事件選擇功能\n      } else {\n        // 直接打開新事件對話框\n        newEventDialog.value = true\n      }\n    }\n    \n    // 打開新事件對話框\n    const openNewEventDialog = () => {\n      resetNewEvent()\n      \n      // 設置默認時間為今天\n      const now = moment()\n      newEvent.value.startTime = now.hour(9).minute(0).second(0).toDate()\n      newEvent.value.endTime = now.hour(10).minute(0).second(0).toDate()\n      \n      newEventDialog.value = true\n    }\n    \n    // 重置新事件表單\n    const resetNewEvent = () => {\n      newEvent.value = {\n        title: '',\n        description: '',\n        startTime: null,\n        endTime: null,\n        location: '',\n        securityLevel: currentUser.value?.securityLevel || null,\n        specialViewerIds: []\n      }\n    }\n    \n    // 保存新事件\n    const saveNewEvent = async () => {\n      try {\n        // 表單驗證\n        if (!newEvent.value.title) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請輸入事件標題',\n            life: 3000\n          })\n          return\n        }\n        \n        if (!newEvent.value.startTime || !newEvent.value.endTime) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請選擇開始和結束時間',\n            life: 3000\n          })\n          return\n        }\n        \n        if (moment(newEvent.value.endTime).isBefore(moment(newEvent.value.startTime))) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '結束時間不能早於開始時間',\n            life: 3000\n          })\n          return\n        }\n        \n        savingEvent.value = true\n        \n        await store.dispatch('calendar/createEvent', newEvent.value)\n        \n        toast.add({\n          severity: 'success',\n          summary: '成功',\n          detail: '事件已創建',\n          life: 3000\n        })\n        \n        newEventDialog.value = false\n        resetNewEvent()\n        \n        // 重新加載事件\n        await loadEvents()\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: error.response?.data || '創建事件失敗',\n          life: 3000\n        })\n      } finally {\n        savingEvent.value = false\n      }\n    }\n    \n    // 打開事件詳情對話框\n    const openEventDetailsDialog = async (event) => {\n      selectedEvent.value = event\n      \n      // 獲取事件特殊權限\n      if (isEventCreator.value) {\n        try {\n          await store.dispatch('calendar/fetchEventPermissions', event.id)\n        } catch (error) {\n          console.error('無法獲取事件權限:', error)\n        }\n      }\n      \n      eventDetailsDialog.value = true\n    }\n    \n    // 編輯事件\n    const editEvent = () => {\n      if (!selectedEvent.value) return\n      \n      // 複製事件對象進行編輯\n      editingEvent.value = JSON.parse(JSON.stringify(selectedEvent.value))\n      \n      // 將字串日期轉換為Date物件\n      editingEvent.value.startTime = new Date(editingEvent.value.startTime)\n      editingEvent.value.endTime = new Date(editingEvent.value.endTime)\n      \n      // 關閉詳情對話框，打開編輯對話框\n      eventDetailsDialog.value = false\n      editEventDialog.value = true\n    }\n    \n    // 保存編輯的事件\n    const saveEditedEvent = async () => {\n      try {\n        // 表單驗證\n        if (!editingEvent.value.title) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請輸入事件標題',\n            life: 3000\n          })\n          return\n        }\n        \n        if (!editingEvent.value.startTime || !editingEvent.value.endTime) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '請選擇開始和結束時間',\n            life: 3000\n          })\n          return\n        }\n        \n        if (moment(editingEvent.value.endTime).isBefore(moment(editingEvent.value.startTime))) {\n          toast.add({\n            severity: 'warn',\n            summary: '提示',\n            detail: '結束時間不能早於開始時間',\n            life: 3000\n          })\n          return\n        }\n        \n        savingEvent.value = true\n        \n        await store.dispatch('calendar/updateEvent', {\n          id: editingEvent.value.id,\n          eventData: editingEvent.value\n        })\n        \n        toast.add({\n          severity: 'success',\n          summary: '成功',\n          detail: '事件已更新',\n          life: 3000\n        })\n        \n        editEventDialog.value = false\n        editingEvent.value = null\n        \n        // 重新加載事件\n        await loadEvents()\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: error.response?.data || '更新事件失敗',\n          life: 3000\n        })\n      } finally {\n        savingEvent.value = false\n      }\n    }\n    \n    // 確認刪除事件\n    const confirmDeleteEvent = () => {\n      confirm.require({\n        message: '確定要刪除此事件嗎？',\n        header: '刪除確認',\n        icon: 'pi pi-exclamation-triangle',\n        acceptLabel: '確定',\n        rejectLabel: '取消',\n        accept: () => deleteEvent()\n      })\n    }\n    \n    // 刪除事件\n    const deleteEvent = async () => {\n      if (!selectedEvent.value) return\n      \n      try {\n        await store.dispatch('calendar/deleteEvent', selectedEvent.value.id)\n        \n        toast.add({\n          severity: 'success',\n          summary: '成功',\n          detail: '事件已刪除',\n          life: 3000\n        })\n        \n        eventDetailsDialog.value = false\n        selectedEvent.value = null\n        \n        // 重新加載事件\n        await loadEvents()\n      } catch (error) {\n        toast.add({\n          severity: 'error',\n          summary: '錯誤',\n          detail: error.response?.data || '刪除事件失敗',\n          life: 3000\n        })\n      }\n    }\n    \n    // 工具方法\n    const formatEventTime = (event) => {\n      const start = moment(event.startTime)\n      return start.format('HH:mm')\n    }\n    \n    const formatEventDateTime = (event) => {\n      const start = moment(event.startTime)\n      const end = moment(event.endTime)\n      \n      if (start.isSame(end, 'day')) {\n        return `${start.format('YYYY/MM/DD HH:mm')} - ${end.format('HH:mm')}`\n      } else {\n        return `${start.format('YYYY/MM/DD HH:mm')} - ${end.format('YYYY/MM/DD HH:mm')}`\n      }\n    }\n    \n    const getEventClass = (event) => {\n      if (!event.securityLevel) return ''\n      \n      switch (event.securityLevel) {\n        case 'LEVEL_1': return 'event-level1'\n        case 'LEVEL_2': return 'event-level2'\n        case 'LEVEL_3': return 'event-level3'\n        case 'LEVEL_4': return 'event-level4'\n        default: return ''\n      }\n    }\n    \n    const getSecurityLevelName = (level) => {\n      if (!securityLevels.value || !level) return level\n      \n      return securityLevels.value[level]?.description || level\n    }\n    \n    // 初始化\n    onMounted(async () => {\n      // 加載安全等級\n      try {\n        await store.dispatch('employee/fetchSecurityLevels')\n      } catch (error) {\n        console.error('無法加載安全等級:', error)\n      }\n      \n      // 加載員工列表\n      try {\n        await store.dispatch('employee/fetchActiveEmployees')\n      } catch (error) {\n        console.error('無法加載員工列表:', error)\n      }\n      \n      // 設置當前日期並加載事件\n      await store.dispatch('calendar/setCurrentDate', \n        moment([selectedYear.value, selectedMonth.value - 1, 1]).format('YYYY-MM-DD')\n      )\n      await loadEvents()\n    })\n    \n    return {\n      // 日期相關\n      currentDate,\n      selectedMonth,\n      selectedYear,\n      weekdays,\n      months,\n      years,\n      currentMonthYear,\n      calendarDays,\n      \n      // 對話框狀態\n      newEventDialog,\n      eventDetailsDialog,\n      editEventDialog,\n      \n      // 事件相關\n      newEvent,\n      selectedEvent,\n      editingEvent,\n      savingEvent,\n      securityLevelOptions,\n      lowerLevelEmployees,\n      specialViewersDisplay,\n      \n      // 計算屬性\n      isEventCreator,\n      canEditEvent,\n      canDeleteEvent,\n      canGrantSpecialPermissions,\n      \n      // 方法\n      previousMonth,\n      nextMonth,\n      goToToday,\n      selectDay,\n      openNewEventDialog,\n      resetNewEvent,\n      saveNewEvent,\n      openEventDetailsDialog,\n      editEvent,\n      saveEditedEvent,\n      confirmDeleteEvent,\n      deleteEvent,\n      formatEventTime,\n      formatEventDateTime,\n      getEventClass,\n      getSecurityLevelName\n    }\n  }\n}\n</script>\n\n<style scoped>\n.calendar-container {\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  padding: 1.5rem;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.calendar-header h1 {\n  margin: 0;\n  color: #3B82F6;\n  font-size: 1.8rem;\n}\n\n.calendar-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.month-dropdown, .year-dropdown {\n  width: 120px;\n  margin-left: 0.5rem;\n}\n\n.calendar-weekdays {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 4px;\n  margin-bottom: 4px;\n}\n\n.weekday {\n  text-align: center;\n  padding: 0.5rem;\n  font-weight: 600;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.calendar-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 4px;\n}\n\n.calendar-day {\n  position: relative;\n  min-height: 100px;\n  background-color: #fff;\n  border-radius: 4px;\n  border: 1px solid #e9ecef;\n  padding: 4px;\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.calendar-day:hover {\n  background-color: #f8f9fa;\n  border-color: #d4d4d4;\n}\n\n.day-number {\n  text-align: right;\n  margin-bottom: 4px;\n  font-weight: 600;\n}\n\n.other-month {\n  opacity: 0.6;\n  background-color: #f8f9fa;\n}\n\n.today {\n  border: 2px solid #3B82F6;\n}\n\n.has-events .day-number {\n  color: #3B82F6;\n}\n\n.day-events {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  font-size: 0.8rem;\n}\n\n.day-event {\n  padding: 2px 4px;\n  border-radius: 3px;\n  background-color: #e6f2ff;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  cursor: pointer;\n  border-left: 3px solid #3B82F6;\n  transition: all 0.2s ease;\n}\n\n.day-event:hover {\n  transform: translateY(-1px);\n}\n\n.event-time {\n  font-weight: 600;\n  margin-right: 4px;\n}\n\n/* 不同安全等級的事件顏色 */\n.event-level1 {\n  background-color: #ffe6e6;\n  border-left-color: #ff4d4d;\n}\n\n.event-level2 {\n  background-color: #fff9e6;\n  border-left-color: #ffcc00;\n}\n\n.event-level3 {\n  background-color: #e6f9ff;\n  border-left-color: #33ccff;\n}\n\n.event-level4 {\n  background-color: #e6ffe6;\n  border-left-color: #33cc33;\n}\n\n/* 事件詳情 */\n.event-details {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.event-detail-item {\n  display: flex;\n}\n\n.detail-label {\n  font-weight: 600;\n  width: 80px;\n}\n\n.event-description h3, .event-special-viewers h3 {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n}\n\n.event-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n/* 響應式設計 */\n@media (max-width: 768px) {\n  .calendar-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .calendar-weekdays, .calendar-days {\n    grid-template-columns: repeat(7, 1fr);\n  }\n  \n  .calendar-day {\n    min-height: 80px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}